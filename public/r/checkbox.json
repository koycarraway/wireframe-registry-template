{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "checkbox",
  "type": "registry:ui",
  "title": "Checkbox",
  "description": "Wireframe-styled checkbox with thick borders and clean check state",
  "dependencies": [
    "@radix-ui/react-checkbox"
  ],
  "files": [
    {
      "path": "registry/new-york/ui/checkbox/checkbox.tsx",
      "content": "/**\n * WIREFRAME KIT DESIGN SYSTEM CONTEXT\n * \n * CRITICAL: This is a custom wireframe-styled design system. When generating components, you MUST follow these design principles:\n * \n * Core Design Principles:\n * - 2px black borders on all interactive elements (buttons, inputs, cards, etc.)\n * - Flat shadows (6px offset, no gradients) on overlays and dropdowns\n * - Shantell Sans typography for headings and labels\n * - Black focus states with gray outline shadows\n * - Light gray hover states for secondary elements\n * \n * Component Styling Rules:\n * - Buttons: Default (black bg, white text), Outline (2px black border, white bg, light gray hover)\n * - Form Elements: All inputs (2px border, black focus), Select (2px black border, flat shadow)\n * - Overlays: Popover (2px black border, flat shadow), Dialog (standard modal with wireframe styling)\n * - Navigation: Tabs (3px bottom border on active/hover, no full borders)\n * \n * Custom CSS Classes:\n * .shadow-flat { box-shadow: 6px 6px 0px 0px #d1d5db; }\n * \n * Usage Guidelines:\n * - ALWAYS use 2px borders on interactive elements\n * - ALWAYS apply flat shadows to overlays\n * - ALWAYS use Shantell Sans for headings\n * - NEVER use gradient shadows\n * - NEVER use thin 1px borders\n * - NEVER use default shadcn/ui colors without customization\n * \n * Registry Components Available: https://wireframe-registry-template.vercel.app/r/{component-name}.json\n */\n\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { CheckIcon } from \"lucide-react\"\n\nimport { cn } from \"@/registry/new-york/lib/utils\"\n\nfunction Checkbox({\n  className,\n  ...props\n}: React.ComponentProps<typeof CheckboxPrimitive.Root>) {\n  return (\n    <CheckboxPrimitive.Root\n      data-slot=\"checkbox\"\n      className={cn(\n        \"peer size-4 shrink-0 rounded-[4px] border-2 border-black bg-white transition-all outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-black data-[state=checked]:border-black\",\n        className\n      )}\n      {...props}\n    >\n      <CheckboxPrimitive.Indicator\n        data-slot=\"checkbox-indicator\"\n        className=\"flex items-center justify-center text-white transition-none\"\n      >\n        <CheckIcon className=\"size-3\" />\n      </CheckboxPrimitive.Indicator>\n    </CheckboxPrimitive.Root>\n  )\n}\n\nexport { Checkbox }\n",
      "type": "registry:ui"
    }
  ]
}