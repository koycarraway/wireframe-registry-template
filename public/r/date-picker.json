{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "date-picker",
  "type": "registry:ui",
  "title": "Date Picker",
  "description": "Custom date picker matching input styling for fleet dates",
  "dependencies": [
    "date-fns"
  ],
  "registryDependencies": [
    "calendar",
    "popover",
    "button"
  ],
  "files": [
    {
      "path": "registry/new-york/ui/date-picker/date-picker.tsx",
      "content": "/**\n * WIREFRAME KIT DESIGN SYSTEM CONTEXT\n * \n * CRITICAL: This is a custom wireframe-styled design system. When generating components, you MUST follow these design principles:\n * \n * Core Design Principles:\n * - 2px black borders on all interactive elements (buttons, inputs, cards, etc.)\n * - Flat shadows (6px offset, no gradients) on overlays and dropdowns\n * - Shantell Sans typography for headings and labels\n * - Black focus states with gray outline shadows\n * - Light gray hover states for secondary elements\n * \n * Component Styling Rules:\n * - Buttons: Default (black bg, white text), Outline (2px black border, white bg, light gray hover)\n * - Form Elements: All inputs (2px border, black focus), Select (2px black border, flat shadow)\n * - Overlays: Popover (2px black border, flat shadow), Dialog (standard modal with wireframe styling)\n * - Navigation: Tabs (3px bottom border on active/hover, no full borders)\n * \n * Custom CSS Classes:\n * .shadow-flat { box-shadow: 6px 6px 0px 0px #d1d5db; }\n * \n * Usage Guidelines:\n * - ALWAYS use 2px borders on interactive elements\n * - ALWAYS apply flat shadows to overlays\n * - ALWAYS use Shantell Sans for headings\n * - NEVER use gradient shadows\n * - NEVER use thin 1px borders\n * - NEVER use default shadcn/ui colors without customization\n * \n * Registry Components Available: https://wireframe-registry-template.vercel.app/r/{component-name}.json\n */\n\n\nimport * as React from \"react\"\nimport { format } from \"date-fns\"\nimport { Calendar as CalendarIcon } from \"lucide-react\"\n\nimport { cn } from \"@/registry/new-york/lib/utils\"\nimport { Button } from \"@/registry/new-york/ui/button/button\"\nimport { Calendar } from \"@/registry/new-york/ui/calendar/calendar\"\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/registry/new-york/ui/popover/popover\"\n\ninterface DatePickerProps {\n  date?: Date\n  onSelect?: (date: Date | undefined) => void\n  placeholder?: string\n  disabled?: boolean\n  className?: string\n}\n\nexport function DatePicker({\n  date,\n  onSelect,\n  placeholder = \"Pick a date\",\n  disabled = false,\n  className,\n}: DatePickerProps) {\n  return (\n    <Popover>\n      <PopoverTrigger asChild>\n        <button\n          className={cn(\n            \"flex h-9 w-[280px] items-center justify-start rounded-sm border-2 border-input bg-transparent px-3 py-1 text-base transition-[color,box-shadow] outline-none disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50\",\n            !date && \"text-muted-foreground\",\n            className\n          )}\n          disabled={disabled}\n        >\n          <CalendarIcon className=\"mr-2 h-4 w-4\" />\n          {date ? format(date, \"PPP\") : placeholder}\n        </button>\n      </PopoverTrigger>\n      <PopoverContent className=\"w-auto p-0\">\n        <Calendar\n          mode=\"single\"\n          selected={date}\n          onSelect={onSelect}\n          initialFocus\n        />\n      </PopoverContent>\n    </Popover>\n  )\n}\n",
      "type": "registry:ui"
    }
  ]
}